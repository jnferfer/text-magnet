{"version":3,"sources":["StreamlitVisGraph.tsx","index.tsx"],"names":["StreamlitVisGraph","render","graph","JSON","parse","props","args","nodes","slice","i","length","title","div","htmlTitle","options","events","selectNode","event","Streamlit","setComponentValue","getNetwork","network","html","container","document","createElement","innerHTML","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","getElementById"],"mappings":"sQASMA,E,4MAEGC,OAAS,WAad,IAJA,IAAIC,EAAQC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,MAEnBC,EAAQL,EAAMK,MAAMC,QAEfC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAC7BF,EAAME,GAAGE,QACVJ,EAAME,GAAGG,IAAM,EAAKC,UAAUN,EAAME,GAAGE,QAG3C,IAAMG,EAAUX,KAAKC,MAAM,EAAKC,MAAMC,KAAX,QAErBS,EAAS,CAEbC,WAAY,SAACC,GACXC,YAAUC,kBAAkBF,EAAMV,MAAM,MAa5C,OACE,8BAEA,kBAAC,IAAD,CACAL,MAAOA,EACPY,QAASA,EACTC,OAAQA,EACRK,WAAY,SAACC,S,EAQTR,UAAY,SAACS,GACnB,IAAMC,EAAYC,SAASC,cAAc,OAEzC,OADAF,EAAUG,UAAYJ,EACfC,G,yBAxDqBI,0BA4DjBC,oCAAwB5B,GC/DvC6B,IAAS5B,OACP,kBAAC,IAAM6B,WAAP,KACE,kBAAC,oBAAD,KACE,kBAAC,EAAD,QAGJN,SAASO,eAAe,W","file":"static/js/main.5f84d5ed.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport VisGraph from 'react-vis-graph-wrapper';\n\n\nclass StreamlitVisGraph extends StreamlitComponentBase {\n\n  public render = (): ReactNode => {\n\n    function lookup_node_id(lookup_node, mynodes){\n      for (let node of mynodes){\n          if (node.id === lookup_node){\n              return node;\n          }\n    }}\n\n    var graph = JSON.parse(this.props.args[\"data\"]);\n    \n    var nodes = graph.nodes.slice();\n\n    for (let i = 0; i < nodes.length; i++) {\n      if(nodes[i].title)\n        nodes[i].div = this.htmlTitle(nodes[i].title);\n    }\n  \n    const options = JSON.parse(this.props.args[\"config\"]);\n\n    const events = {\n\n      selectNode: (event:any) => {\n        Streamlit.setComponentValue(event.nodes[0]);\n      }\n\n      // doubleClick: (event:any) => {\n      //   console.log(event.nodes);\n      //   // let link = nodes;\n      //   let lookup_node = lookup_node_id(event.nodes[0], nodes);\n      //   let link = lookup_node.div.innerHTML;\n      //   if(link){\n      //     window.open(link);\n      //   }\n      // }\n    };\n    return (\n      <span>\n    \n      <VisGraph\n      graph={graph}\n      options={options}\n      events={events}\n      getNetwork={(network: any) => {\n        //  if you want access to vis.js network api you can set the state in a parent component using this property\n        //console.log(network);\n      }}/>\n      </span>\n    )\n  }\n\n  private htmlTitle = (html):any => {   \n    const container = document.createElement(\"div\");\n    container.innerHTML = html;\n    return container;\n  }\n}\n\nexport default withStreamlitConnection(StreamlitVisGraph)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport StreamlitVisGraph from \"./StreamlitVisGraph\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <StreamlitVisGraph/>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}